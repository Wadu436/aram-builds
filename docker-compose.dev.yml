# Use postgres/example user/password credentials
version: '3.9'

services:
  db:
    image: postgres:14
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: builds
    volumes:
      - db-data:/var/lib/postgresql/data

  backend:
    image: aram-builds-backend
    build: ./backend
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DATABASE: builds
      POSTGRES_ADDRESS: db:5432
      BIND_ADDRESS: :80
    depends_on:
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.builds_backend.rule=PathPrefix(`/api/`)"
      - "traefik.http.routers.builds_backend.entrypoints=web"
      - "traefik.http.services.builds_backend.loadbalancer.server.port=80"

  frontend:
    image: aram-builds-frontend
    build: ./frontend
    depends_on:
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.builds_frontend.rule=PathPrefix(`/`)"
      - "traefik.http.routers.builds_frontend.entrypoints=web"
      - "traefik.http.services.builds_frontend.loadbalancer.server.port=80"

  traefik:
    restart: always
    image: "traefik:v2.5"
    container_name: "traefik"
    ports:
      - 80:80
      - 8080:8080
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik-dev.yml:/traefik.yml:ro"

volumes:
  db-data:


